import javax.swing.SwingUtilities;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DeanPage.java
 *
 * Created on 4 Feb, 2012, 6:45:33 AM
 */

/**
 *
 * @author deepak
 */
public class DeanPage extends javax.swing.JPanel {

	   String column[] = new String[43];
	    String values[][] = new String[Course.DEFAULT_SEM_COURSES + 1][43];
	    String semID;
	   MainFrame mainFrame;
  

	    // Variables declaration - do not modify
	    private javax.swing.JButton done;
	    private javax.swing.JLabel jLabel1;
	    private javax.swing.JLabel jLabel2;
	    private javax.swing.JLabel jLabel3;
	    private javax.swing.JLabel jLabel4;
	    private javax.swing.JPanel jPanel1;
	    private javax.swing.JPanel jPanel2;
	    private javax.swing.JScrollPane jScrollPane1;
	    private javax.swing.JTable table;
	    // End of variables declaration

	/** Creates new form DeanPage */
	private PageListener pageListener;

	public DeanPage(PageListener pageListener, MainFrame mainFrame) {
        this.pageListener = pageListener;
        this.mainFrame = mainFrame;
        initComponents();
    	
    }
    
    public void setSem() {
        semID = this.pageListener.getSemID();
        char c[] = semID.toCharArray();
        jLabel4.setText(((c[2]=='1')? "Autumn" : "Spring") + " 20" + (char)c[0] + (char)c[1] + 
        		"   First row : For every DegID, enter the number of electives to do");

	    column[0] = "CourseID"; column[1] = "Course Name"; column[2] = "LTPC";
	    int k = 3; 
	    for(int year = 1; year <= 5; year++) 
	    	for(int deptt = 0; deptt < Student.TOTAL_DEPTT; deptt++)
	    		for(int deg = 1; deg <= 2; deg++) { 
	    			column[k] = "" + year + (char)(deptt + 'A') + deg;
	    			k++;
	    		}
	    
	    values[0][0] = "Number Of"; values[0][1] = "Electives"; values[0][2] = "To Do";
	    for(k = 3; k < 43; k++) values[0][k] = "1";
	    int l;
	    for(l = 1; l < 36; l++)
	    	for(k = 3; k < 43; k++) 
	    		values[l][k] = "N";
	    k = 1;
	    int a = 0;
	    char ccc[] = semID.toCharArray();
	    int sem = new Integer("" + ccc[2]).intValue();
	    for(int deptt = 0; deptt < Student.TOTAL_DEPTT; deptt++)
	    	for(int n = 1; n <= 9; n++) {
	    		if(deptt == 3 && n == 9) continue;
	    		values[k][0] = "" + ((sem == 1)? "1" : "2") + (char)((int)deptt + 'A') + n;
	    		values[k][1] = "" + ((sem == 1)? "Aut" : "Spr") + "Deptt" + (char)((int)deptt + 'A') + n;
	    		a = (int)(1 + (Math.random() * 100));
	    		if(a < 50) a = 3104;
	    		else if(a < 70) a = 3003;
	    		else a = 1132;
	    		values[k][2] = "" + a;
	    		k++;
	    	}
	
	    int b, col;	
	    boolean boo = false;
	    for(k = 1; k < Course.DEFAULT_SEM_COURSES + 1; k++) {
	    	col = 3 + ((((k-1) % 5) * 16) % 40);
	    	for(b = 0; b < 8; b++) {
	    		values[k][col + b] = "C";
	    	}
	    	boo = !boo;
	    	col = ((((k-1) % 5) * 16) % 40) + ((boo)? 8 : -4);
	    	if(col < 0) col += 40;
	    	col = 3 + col % 40; 
	    	for(b = 0; b < 4; b++) {
	    		values[k][col + b] = "E";
	    	}
	    }

	    table = new javax.swing.JTable(values, column);
	    table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
	    jScrollPane1.setViewportView(table);
	    mainFrame.pack();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        done = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();


        setPreferredSize(new java.awt.Dimension((int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth()- 100,
            (int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight() - 100));

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18));
    jLabel1.setText("CourseID : Sem(1 = Autumn and 2 = Spring) + Deptt(A, B, C, D) + Serial Number, e.g. Autumn deptt A courses 1A1, 1A2...  ");

    jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18));
    jLabel2.setText("DegID : Year(1,2,3,4,5) + deptt(A, B, C, D) + deg(1 = B Tech, 2 = Dual), e.g. First Year B Tech A is 1A1, Fifth year Dual in deptt B is 5B2");

    jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 17));
    jLabel3.setForeground(java.awt.Color.red);
    jLabel3.setText("For every course, set for each DegID, Subject Type(C = CORE, E = ELECTIVE, N = NA)");

    jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 17));
    jLabel4.setForeground(java.awt.Color.red);
    jLabel4.setText("First row : For every DegID, enter the number of electives to do");

    done.setText("Done");
    done.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            doneActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addContainerGap(41, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                    .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(206, 206, 206))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel2)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addGap(18, 18, 18))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())))
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(32, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(26, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(175, 175, 175))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(17, Short.MAX_VALUE))
    );
    }// </editor-fold>

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	int array[][] = new int[Student.TOTAL_DEPTT][15];
    	int k[] = new int[Student.TOTAL_DEPTT];
    	int rnd, tmp;
    	char deptt;
    	int depNo;
    	String teacherID;
    	Course c;

    	for(int h = 0; h < Student.TOTAL_DEPTT; h++) {
    		k[h] = 15;
    		for(int l = 0; l < 15; l++) array[h][l] = l + 1;
    	}
    	
    	for(int i = 1; i < 36; i++) {
        	//add courses
    		c = new Course(new ID(values[i][0]), values[i][1], new Integer(values[i][2]).intValue());
    		c.insert();
    		deptt = c.getCourseID().getT2();
    		depNo = (int)((int)deptt - 'A');
    		rnd = (int)(Math.random() * k[depNo]);
    		
    		if( array[depNo][rnd] <= 5 ) 
    			teacherID = "F" + deptt + array[depNo][rnd];
    		else 		 
    			teacherID = "T" + deptt + (array[depNo][rnd] - 5);
    		//Randomly, mapping teachers to courses set by the DeanID : 'D'
    		Teacher.mapCourseTeacher(c.getCourseID().toString(), teacherID, semID);

    		tmp = array[depNo][rnd];
    		array[depNo][rnd] = array[depNo][k[depNo] - 1];
    		array[depNo][k[depNo] - 1] = tmp;
    		k[depNo]--;
    	}
    	
		//Mapping DegID to courses as per subtype set by the Dean as "C" : CORE or, "E" : ELECTIVE or, "N" : None
    	for(int i = 1; i < 36; i++)
    		for(int j = 3; j < 43; j++)
    			if(values[i][j].equals("C")) Course.mapCourseDeg(column[j] , values[i][0], Course.CORE, semID);
    			else if(values[i][j].equals("E")) Course.mapCourseDeg(column[j] , values[i][0], Course.ELECTIVE, semID);

    	//Setting No. of electives to be done by each DegID : Year(1,2,3,4,5) + deptt + btech/dual
    	for(int j = 3; j < 43; j++) {
			Course.setDegElective(column[j], new Integer(values[0][j]).intValue(), semID);
		
			//Updating no of electives for all students DegIDwise	
			Student stus[] = Student.getDegIDStudents(column[j], semID);
			if(stus == null || stus.length == 0) continue;
			for(int h = 0; h < stus.length; h++) 
				Student.updateElective(new Integer(values[0][j]).intValue(), 
						stus[h].getStudentID().toString());
		}
		
		mainFrame.remove(this);
		this.pageListener.done();
    }

}
